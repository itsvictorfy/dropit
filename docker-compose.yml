version: '3'
services:
  mariadb:
    container_name: dropit_users_DB
    build:
      dockerfile: db.dockerfile
    environment:
      MARIADB_ROOT_PASSWORD: admin
      MARIADB_DATABASE: userdDB
      MARIADB_USER: admin
      MARIADB_PASSWORD: admin
    ports:
      - 3306:3306
    volumes:
      - shared-data:/data/mariadb
    healthcheck:
      test: mysqladmin -padmin ping -h localhost
      interval: 20s
      start_period: 10s
      timeout: 10s
      retries: 3
    networks:
      vnet:
        ipv4_address: 172.24.0.4

  dropit:
    container_name: dropit_app
    restart: always
    build:
      dockerfile: Dockerfile
    links:
      - "mariadb:userdDB"
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - 8080:8080
    volumes:
      - shared-data:/data/dropit
    environment:
      CONTAINER_NAME: dropit
    networks:
      vnet:
        ipv4_address: 172.24.0.5

  redis:
    image: redis:latest
    container_name: dropit_prod_cache
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - shared-data:/data/redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    networks:
      vnet:
        ipv4_address: 172.24.0.6
    
  # redis_exporter:
  #   image: oliver006/redis_exporter
  #   container_name: dropit_redis_export
  #   depends_on:
  #     - redis
  #   expose:
  #     - 9121
  
  # mysql_exporter:
  #   image: prom/mysqld-exporter
  #   container_name: dropit_mysql_export
  #   ports:
  #     - 9104:9104
  #   links:
  #     - mariadb
  #   depends_on:
  #     - mariadb
  #   environment:
  #     - DATA_SOURCE_NAME='exporter:exporterpass@(localhost:3306)/'
  
  prometheus:
    container_name: dropit_promotheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/recording_rules.yaml:/etc/prometheus/recording_rules.yaml
    ports:
      - 9090:9090
    networks:
      vnet:
        ipv4_address: 172.24.0.7
    
  grafana:
    build:
      dockerfile: grafana.dockerfile
    container_name: dropit_grafana
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
    ports:
      - 3000:3000
    links:
      - prometheus
    networks:
      vnet:
        ipv4_address: 172.24.0.8
    
  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_explorer
    restart: unless-stopped
    expose:
      - 9100
    networks:
      vnet:
        ipv4_address: 172.24.0.9

volumes:
  shared-data:

networks:
  vnet:
    ipam: 
      driver: default
      config:
        - subnet: 172.24.0.0/24